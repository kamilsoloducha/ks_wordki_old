trigger:
  branches:
   include:
     - master
  paths:
    include:
     - 'client/*'
  

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DockerCompose@0
  displayName: Build
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'docker-hub-connection'
    dockerComposeFile: 'client/build/docker/docker-compose.build.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: up
- task: DockerCompose@0
  displayName: Run Tests
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'docker-hub-connection'
    dockerComposeFile: 'client/build/docker/docker-compose.test.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: up
- task: CmdLine@2
  displayName: Copy test results
  inputs:
    script: |
      docker ps -a
      docker cp wordki-client.ci.test:/usr/src/app/dist/test $(System.DefaultWorkingDirectory)/test
      ls $(System.DefaultWorkingDirectory)/test
      ls $(System.DefaultWorkingDirectory)/test/results
- task: DockerCompose@0
  displayName: Run UI Tests 
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'docker-hub-connection'
    dockerComposeFile: 'client/build/docker/docker-compose.e2e.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: up
- task: CmdLine@2
  displayName: Copy ui test results
  inputs:
    script: |
      docker ps -a
      docker cp wordki.ci.e2etests:/src/test/results $(System.DefaultWorkingDirectory)/test/results
      ls $(System.DefaultWorkingDirectory)/test/results
- task: PublishTestResults@2
  displayName: Publish test results
  inputs:
    testResultsFormat: 'JUnit'
    searchFolder: $(System.DefaultWorkingDirectory)/test/results
    testResultsFiles: 'TESTS-*.xml'
- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/test/coverage/cobertura-coverage.xml'
- task: DockerCompose@0
  displayName: Release
  inputs:
    containerregistrytype: 'Container Registry'
    dockerRegistryEndpoint: 'docker-hub-connection'
    dockerComposeFile: 'client/build/docker/docker-compose.release.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: build
- task: Docker@2
  displayName: Login to Docker Hub
  inputs:
    containerRegistry: 'docker-hub-connection'
    command: 'login'
- task: Docker@2
  displayName: Push
  inputs:
    containerRegistry: 'docker-hub-connection'
    repository: 'vesper0990/wordki'
    command: 'push'
    tags: |
      $(Build.BuildId)